{"ast":null,"code":"class VideoService {\n  constructor() {\n    this.videoElement = null;\n    this.canvas = null;\n    this.ctx = null;\n    this.stream = null;\n    this.isStreaming = false;\n    this.frameInterval = null;\n    this.frameRate = 30;\n    this.quality = 0.8;\n    this.width = 640;\n    this.height = 480;\n    this.onVideoFrame = null;\n    this.onVideoError = null;\n  }\n\n  // Initialize video service\n  async initialize(videoElement, options = {}) {\n    try {\n      this.videoElement = videoElement;\n\n      // Set options\n      if (options.frameRate) this.frameRate = options.frameRate;\n      if (options.quality) this.quality = options.quality;\n      if (options.width) this.width = options.width;\n      if (options.height) this.height = options.height;\n\n      // Create canvas for frame capture\n      this.canvas = document.createElement('canvas');\n      this.canvas.width = this.width;\n      this.canvas.height = this.height;\n      this.ctx = this.canvas.getContext('2d');\n      console.log('‚úÖ Video service initialized successfully');\n      return true;\n    } catch (error) {\n      console.error('‚ùå Error initializing video service:', error);\n      throw error;\n    }\n  }\n\n  // Start video stream\n  async startVideo(options = {}) {\n    if (this.isStreaming) {\n      console.warn('‚ö†Ô∏è Video already streaming');\n      return false;\n    }\n    try {\n      // Request camera access\n      this.stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: {\n            ideal: this.width\n          },\n          height: {\n            ideal: this.height\n          },\n          frameRate: {\n            ideal: this.frameRate\n          },\n          facingMode: 'user'\n        },\n        audio: false\n      });\n\n      // Set video element source\n      if (this.videoElement) {\n        this.videoElement.srcObject = this.stream;\n        this.videoElement.play();\n      }\n      this.isStreaming = true;\n\n      // Start frame capture\n      this.startFrameCapture();\n      console.log('üìπ Video streaming started');\n      return true;\n    } catch (error) {\n      console.error('‚ùå Error starting video stream:', error);\n      if (this.onVideoError) {\n        this.onVideoError(error);\n      }\n      throw error;\n    }\n  }\n\n  // Stop video stream\n  stopVideo() {\n    if (!this.isStreaming) {\n      console.warn('‚ö†Ô∏è Video not streaming');\n      return false;\n    }\n    try {\n      this.isStreaming = false;\n\n      // Stop frame capture\n      if (this.frameInterval) {\n        clearInterval(this.frameInterval);\n        this.frameInterval = null;\n      }\n\n      // Stop all tracks\n      if (this.stream) {\n        this.stream.getTracks().forEach(track => track.stop());\n        this.stream = null;\n      }\n\n      // Clear video element\n      if (this.videoElement) {\n        this.videoElement.srcObject = null;\n      }\n      console.log('üõë Video streaming stopped');\n      return true;\n    } catch (error) {\n      console.error('‚ùå Error stopping video stream:', error);\n      throw error;\n    }\n  }\n\n  // Start frame capture\n  startFrameCapture() {\n    if (this.frameInterval) {\n      clearInterval(this.frameInterval);\n    }\n    const interval = 1000 / this.frameRate;\n    this.frameInterval = setInterval(() => {\n      if (this.isStreaming && this.videoElement && this.canvas) {\n        this.captureFrame();\n      }\n    }, interval);\n  }\n\n  // Capture current video frame\n  captureFrame() {\n    try {\n      if (!this.videoElement || !this.canvas || !this.ctx) {\n        return;\n      }\n\n      // Draw current video frame to canvas\n      this.ctx.drawImage(this.videoElement, 0, 0, this.videoElement.videoWidth, this.videoElement.videoHeight, 0, 0, this.canvas.width, this.canvas.height);\n\n      // Convert canvas to blob\n      this.canvas.toBlob(blob => {\n        if (blob && this.onVideoFrame) {\n          this.onVideoFrame(blob, {\n            width: this.canvas.width,\n            height: this.canvas.height,\n            timestamp: new Date().toISOString(),\n            frameRate: this.frameRate,\n            quality: this.quality\n          });\n        }\n      }, 'image/jpeg', this.quality);\n    } catch (error) {\n      console.error('‚ùå Error capturing video frame:', error);\n    }\n  }\n\n  // Take a single snapshot\n  async takeSnapshot() {\n    try {\n      if (!this.videoElement || !this.canvas || !this.ctx) {\n        throw new Error('Video service not initialized');\n      }\n\n      // Draw current frame\n      this.ctx.drawImage(this.videoElement, 0, 0, this.videoElement.videoWidth, this.videoElement.videoHeight, 0, 0, this.canvas.width, this.canvas.height);\n\n      // Convert to blob\n      return new Promise((resolve, reject) => {\n        this.canvas.toBlob(blob => {\n          if (blob) {\n            resolve(blob);\n          } else {\n            reject(new Error('Failed to create snapshot'));\n          }\n        }, 'image/jpeg', this.quality);\n      });\n    } catch (error) {\n      console.error('‚ùå Error taking snapshot:', error);\n      throw error;\n    }\n  }\n\n  // Update video settings\n  updateSettings(settings) {\n    if (settings.frameRate) {\n      this.frameRate = settings.frameRate;\n      if (this.isStreaming) {\n        this.startFrameCapture(); // Restart with new frame rate\n      }\n    }\n    if (settings.quality) {\n      this.quality = Math.max(0.1, Math.min(1.0, settings.quality));\n    }\n    if (settings.width) {\n      this.width = settings.width;\n      if (this.canvas) {\n        this.canvas.width = this.width;\n      }\n    }\n    if (settings.height) {\n      this.height = settings.height;\n      if (this.canvas) {\n        this.canvas.height = this.height;\n      }\n    }\n    console.log('‚öôÔ∏è Video settings updated:', settings);\n  }\n\n  // Get current video settings\n  getSettings() {\n    return {\n      frameRate: this.frameRate,\n      quality: this.quality,\n      width: this.width,\n      height: this.height,\n      isStreaming: this.isStreaming\n    };\n  }\n\n  // Set callback for video frames\n  setVideoFrameCallback(callback) {\n    this.onVideoFrame = callback;\n  }\n\n  // Set callback for video errors\n  setVideoErrorCallback(callback) {\n    this.onVideoError = callback;\n  }\n\n  // Get streaming status\n  getStreamingStatus() {\n    return {\n      isStreaming: this.isStreaming,\n      hasStream: !!this.stream,\n      hasVideoElement: !!this.videoElement,\n      frameRate: this.frameRate,\n      quality: this.quality,\n      dimensions: `${this.width}x${this.height}`\n    };\n  }\n\n  // Get available video devices\n  async getVideoDevices() {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      return devices.filter(device => device.kind === 'videoinput');\n    } catch (error) {\n      console.error('‚ùå Error getting video devices:', error);\n      return [];\n    }\n  }\n\n  // Switch to different video device\n  async switchVideoDevice(deviceId) {\n    try {\n      if (this.stream) {\n        this.stream.getTracks().forEach(track => track.stop());\n      }\n      this.stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          deviceId: {\n            exact: deviceId\n          },\n          width: {\n            ideal: this.width\n          },\n          height: {\n            ideal: this.height\n          },\n          frameRate: {\n            ideal: this.frameRate\n          }\n        },\n        audio: false\n      });\n      if (this.videoElement) {\n        this.videoElement.srcObject = this.stream;\n        this.videoElement.play();\n      }\n      console.log('üîÑ Switched to video device:', deviceId);\n      return true;\n    } catch (error) {\n      console.error('‚ùå Error switching video device:', error);\n      throw error;\n    }\n  }\n\n  // Clean up resources\n  cleanup() {\n    try {\n      this.stopVideo();\n      if (this.canvas) {\n        this.canvas.remove();\n        this.canvas = null;\n        this.ctx = null;\n      }\n      this.videoElement = null;\n      console.log('üßπ Video service cleaned up');\n    } catch (error) {\n      console.error('‚ùå Error cleaning up video service:', error);\n    }\n  }\n}\n\n// Create singleton instance\nconst videoService = new VideoService();\nexport default videoService;","map":{"version":3,"names":["VideoService","constructor","videoElement","canvas","ctx","stream","isStreaming","frameInterval","frameRate","quality","width","height","onVideoFrame","onVideoError","initialize","options","document","createElement","getContext","console","log","error","startVideo","warn","navigator","mediaDevices","getUserMedia","video","ideal","facingMode","audio","srcObject","play","startFrameCapture","stopVideo","clearInterval","getTracks","forEach","track","stop","interval","setInterval","captureFrame","drawImage","videoWidth","videoHeight","toBlob","blob","timestamp","Date","toISOString","takeSnapshot","Error","Promise","resolve","reject","updateSettings","settings","Math","max","min","getSettings","setVideoFrameCallback","callback","setVideoErrorCallback","getStreamingStatus","hasStream","hasVideoElement","dimensions","getVideoDevices","devices","enumerateDevices","filter","device","kind","switchVideoDevice","deviceId","exact","cleanup","remove","videoService"],"sources":["/Users/yueling/Monash/PeaceMaker/ui/src/services/videoService.js"],"sourcesContent":["class VideoService {\n  constructor() {\n    this.videoElement = null;\n    this.canvas = null;\n    this.ctx = null;\n    this.stream = null;\n    this.isStreaming = false;\n    this.frameInterval = null;\n    this.frameRate = 30;\n    this.quality = 0.8;\n    this.width = 640;\n    this.height = 480;\n    this.onVideoFrame = null;\n    this.onVideoError = null;\n  }\n\n  // Initialize video service\n  async initialize(videoElement, options = {}) {\n    try {\n      this.videoElement = videoElement;\n      \n      // Set options\n      if (options.frameRate) this.frameRate = options.frameRate;\n      if (options.quality) this.quality = options.quality;\n      if (options.width) this.width = options.width;\n      if (options.height) this.height = options.height;\n\n      // Create canvas for frame capture\n      this.canvas = document.createElement('canvas');\n      this.canvas.width = this.width;\n      this.canvas.height = this.height;\n      this.ctx = this.canvas.getContext('2d');\n\n      console.log('‚úÖ Video service initialized successfully');\n      return true;\n    } catch (error) {\n      console.error('‚ùå Error initializing video service:', error);\n      throw error;\n    }\n  }\n\n  // Start video stream\n  async startVideo(options = {}) {\n    if (this.isStreaming) {\n      console.warn('‚ö†Ô∏è Video already streaming');\n      return false;\n    }\n\n    try {\n      // Request camera access\n      this.stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: this.width },\n          height: { ideal: this.height },\n          frameRate: { ideal: this.frameRate },\n          facingMode: 'user'\n        },\n        audio: false\n      });\n\n      // Set video element source\n      if (this.videoElement) {\n        this.videoElement.srcObject = this.stream;\n        this.videoElement.play();\n      }\n\n      this.isStreaming = true;\n\n      // Start frame capture\n      this.startFrameCapture();\n\n      console.log('üìπ Video streaming started');\n      return true;\n    } catch (error) {\n      console.error('‚ùå Error starting video stream:', error);\n      if (this.onVideoError) {\n        this.onVideoError(error);\n      }\n      throw error;\n    }\n  }\n\n  // Stop video stream\n  stopVideo() {\n    if (!this.isStreaming) {\n      console.warn('‚ö†Ô∏è Video not streaming');\n      return false;\n    }\n\n    try {\n      this.isStreaming = false;\n\n      // Stop frame capture\n      if (this.frameInterval) {\n        clearInterval(this.frameInterval);\n        this.frameInterval = null;\n      }\n\n      // Stop all tracks\n      if (this.stream) {\n        this.stream.getTracks().forEach(track => track.stop());\n        this.stream = null;\n      }\n\n      // Clear video element\n      if (this.videoElement) {\n        this.videoElement.srcObject = null;\n      }\n\n      console.log('üõë Video streaming stopped');\n      return true;\n    } catch (error) {\n      console.error('‚ùå Error stopping video stream:', error);\n      throw error;\n    }\n  }\n\n  // Start frame capture\n  startFrameCapture() {\n    if (this.frameInterval) {\n      clearInterval(this.frameInterval);\n    }\n\n    const interval = 1000 / this.frameRate;\n    \n    this.frameInterval = setInterval(() => {\n      if (this.isStreaming && this.videoElement && this.canvas) {\n        this.captureFrame();\n      }\n    }, interval);\n  }\n\n  // Capture current video frame\n  captureFrame() {\n    try {\n      if (!this.videoElement || !this.canvas || !this.ctx) {\n        return;\n      }\n\n      // Draw current video frame to canvas\n      this.ctx.drawImage(\n        this.videoElement,\n        0, 0,\n        this.videoElement.videoWidth,\n        this.videoElement.videoHeight,\n        0, 0,\n        this.canvas.width,\n        this.canvas.height\n      );\n\n      // Convert canvas to blob\n      this.canvas.toBlob((blob) => {\n        if (blob && this.onVideoFrame) {\n          this.onVideoFrame(blob, {\n            width: this.canvas.width,\n            height: this.canvas.height,\n            timestamp: new Date().toISOString(),\n            frameRate: this.frameRate,\n            quality: this.quality\n          });\n        }\n      }, 'image/jpeg', this.quality);\n\n    } catch (error) {\n      console.error('‚ùå Error capturing video frame:', error);\n    }\n  }\n\n  // Take a single snapshot\n  async takeSnapshot() {\n    try {\n      if (!this.videoElement || !this.canvas || !this.ctx) {\n        throw new Error('Video service not initialized');\n      }\n\n      // Draw current frame\n      this.ctx.drawImage(\n        this.videoElement,\n        0, 0,\n        this.videoElement.videoWidth,\n        this.videoElement.videoHeight,\n        0, 0,\n        this.canvas.width,\n        this.canvas.height\n      );\n\n      // Convert to blob\n      return new Promise((resolve, reject) => {\n        this.canvas.toBlob((blob) => {\n          if (blob) {\n            resolve(blob);\n          } else {\n            reject(new Error('Failed to create snapshot'));\n          }\n        }, 'image/jpeg', this.quality);\n      });\n\n    } catch (error) {\n      console.error('‚ùå Error taking snapshot:', error);\n      throw error;\n    }\n  }\n\n  // Update video settings\n  updateSettings(settings) {\n    if (settings.frameRate) {\n      this.frameRate = settings.frameRate;\n      if (this.isStreaming) {\n        this.startFrameCapture(); // Restart with new frame rate\n      }\n    }\n    if (settings.quality) {\n      this.quality = Math.max(0.1, Math.min(1.0, settings.quality));\n    }\n    if (settings.width) {\n      this.width = settings.width;\n      if (this.canvas) {\n        this.canvas.width = this.width;\n      }\n    }\n    if (settings.height) {\n      this.height = settings.height;\n      if (this.canvas) {\n        this.canvas.height = this.height;\n      }\n    }\n\n    console.log('‚öôÔ∏è Video settings updated:', settings);\n  }\n\n  // Get current video settings\n  getSettings() {\n    return {\n      frameRate: this.frameRate,\n      quality: this.quality,\n      width: this.width,\n      height: this.height,\n      isStreaming: this.isStreaming\n    };\n  }\n\n  // Set callback for video frames\n  setVideoFrameCallback(callback) {\n    this.onVideoFrame = callback;\n  }\n\n  // Set callback for video errors\n  setVideoErrorCallback(callback) {\n    this.onVideoError = callback;\n  }\n\n  // Get streaming status\n  getStreamingStatus() {\n    return {\n      isStreaming: this.isStreaming,\n      hasStream: !!this.stream,\n      hasVideoElement: !!this.videoElement,\n      frameRate: this.frameRate,\n      quality: this.quality,\n      dimensions: `${this.width}x${this.height}`\n    };\n  }\n\n  // Get available video devices\n  async getVideoDevices() {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      return devices.filter(device => device.kind === 'videoinput');\n    } catch (error) {\n      console.error('‚ùå Error getting video devices:', error);\n      return [];\n    }\n  }\n\n  // Switch to different video device\n  async switchVideoDevice(deviceId) {\n    try {\n      if (this.stream) {\n        this.stream.getTracks().forEach(track => track.stop());\n      }\n\n      this.stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          deviceId: { exact: deviceId },\n          width: { ideal: this.width },\n          height: { ideal: this.height },\n          frameRate: { ideal: this.frameRate }\n        },\n        audio: false\n      });\n\n      if (this.videoElement) {\n        this.videoElement.srcObject = this.stream;\n        this.videoElement.play();\n      }\n\n      console.log('üîÑ Switched to video device:', deviceId);\n      return true;\n    } catch (error) {\n      console.error('‚ùå Error switching video device:', error);\n      throw error;\n    }\n  }\n\n  // Clean up resources\n  cleanup() {\n    try {\n      this.stopVideo();\n      \n      if (this.canvas) {\n        this.canvas.remove();\n        this.canvas = null;\n        this.ctx = null;\n      }\n      \n      this.videoElement = null;\n      \n      console.log('üßπ Video service cleaned up');\n    } catch (error) {\n      console.error('‚ùå Error cleaning up video service:', error);\n    }\n  }\n}\n\n// Create singleton instance\nconst videoService = new VideoService();\n\nexport default videoService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}