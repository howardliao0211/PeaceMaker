{"ast":null,"code":"// Error handling utilities for PeaceMaker UI\n\nexport const ErrorTypes = {\n  WEBSOCKET: 'WebSocket',\n  API: 'API',\n  RECORDING: 'Recording',\n  VIDEO: 'Video',\n  AUDIO: 'Audio',\n  GENERAL: 'General'\n};\nexport const ErrorMessages = {\n  [ErrorTypes.WEBSOCKET]: {\n    CONNECTION_FAILED: \"üîå Connection failed - We're still developing the real-time features!\",\n    MESSAGE_PARSE: \"üì® Message error - We're still developing the data processing!\",\n    DISCONNECTED: \"üîå Disconnected - We're still developing the connection stability!\"\n  },\n  [ErrorTypes.API]: {\n    REQUEST_FAILED: \"üåê API error - We're still developing the backend integration!\",\n    TIMEOUT: \"‚è∞ Request timeout - We're still developing the server performance!\",\n    UNAUTHORIZED: \"üîê Access denied - We're still developing the authentication!\"\n  },\n  [ErrorTypes.RECORDING]: {\n    START_FAILED: \"üéôÔ∏è Recording failed - We're still developing the audio capture!\",\n    STOP_FAILED: \"üõë Stop failed - We're still developing the audio control!\",\n    PERMISSION_DENIED: \"üö´ Microphone access denied - We're still developing the permissions!\"\n  },\n  [ErrorTypes.VIDEO]: {\n    START_FAILED: \"üìπ Video failed - We're still developing the camera integration!\",\n    STOP_FAILED: \"üõë Video stop failed - We're still developing the video control!\",\n    PERMISSION_DENIED: \"üö´ Camera access denied - We're still developing the permissions!\"\n  },\n  [ErrorTypes.AUDIO]: {\n    SETTINGS_FAILED: \"‚öôÔ∏è Audio settings failed - We're still developing the audio processing!\",\n    DEVICE_NOT_FOUND: \"üîç Audio device not found - We're still developing the device detection!\"\n  },\n  [ErrorTypes.GENERAL]: {\n    UNKNOWN: \"‚ùì Unknown error - We're still developing this feature!\",\n    NETWORK: \"üåê Network error - We're still developing the connection handling!\",\n    TIMEOUT: \"‚è∞ Operation timeout - We're still developing the performance!\"\n  }\n};\nexport const getErrorMessage = (errorType, errorCode, fallbackMessage = null) => {\n  try {\n    const typeMessages = ErrorMessages[errorType];\n    if (typeMessages && typeMessages[errorCode]) {\n      return typeMessages[errorCode];\n    }\n\n    // Fallback to general error message\n    return fallbackMessage || ErrorMessages[ErrorTypes.GENERAL].UNKNOWN;\n  } catch (error) {\n    console.error('Error getting error message:', error);\n    return \"‚ùì Something went wrong - We're still developing this feature!\";\n  }\n};\nexport const handleError = (error, context = 'Operation', errorType = ErrorTypes.GENERAL) => {\n  var _error$message, _error$message2, _error$message3;\n  // Log the actual error for developers\n  console.error(`‚ùå ${context} error:`, error);\n\n  // Determine error code based on error object\n  let errorCode = 'UNKNOWN';\n  if (error.name === 'TypeError') {\n    errorCode = 'TYPE_ERROR';\n  } else if (error.name === 'NetworkError') {\n    errorCode = 'NETWORK';\n  } else if ((_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('timeout')) {\n    errorCode = 'TIMEOUT';\n  } else if ((_error$message2 = error.message) !== null && _error$message2 !== void 0 && _error$message2.includes('permission')) {\n    errorCode = 'PERMISSION_DENIED';\n  } else if ((_error$message3 = error.message) !== null && _error$message3 !== void 0 && _error$message3.includes('connection')) {\n    errorCode = 'CONNECTION_FAILED';\n  }\n\n  // Get user-friendly message\n  const userMessage = getErrorMessage(errorType, errorCode);\n  return {\n    userMessage,\n    technicalError: error,\n    context,\n    errorType,\n    errorCode,\n    timestamp: new Date()\n  };\n};\nexport const isNetworkError = error => {\n  var _error$message4, _error$message5, _error$message6;\n  return error.name === 'NetworkError' || ((_error$message4 = error.message) === null || _error$message4 === void 0 ? void 0 : _error$message4.includes('network')) || ((_error$message5 = error.message) === null || _error$message5 === void 0 ? void 0 : _error$message5.includes('fetch')) || ((_error$message6 = error.message) === null || _error$message6 === void 0 ? void 0 : _error$message6.includes('connection'));\n};\nexport const isPermissionError = error => {\n  var _error$message7, _error$message8;\n  return error.name === 'NotAllowedError' || ((_error$message7 = error.message) === null || _error$message7 === void 0 ? void 0 : _error$message7.includes('permission')) || ((_error$message8 = error.message) === null || _error$message8 === void 0 ? void 0 : _error$message8.includes('denied'));\n};\nexport const isTimeoutError = error => {\n  var _error$message9, _error$message0;\n  return error.name === 'TimeoutError' || ((_error$message9 = error.message) === null || _error$message9 === void 0 ? void 0 : _error$message9.includes('timeout')) || ((_error$message0 = error.message) === null || _error$message0 === void 0 ? void 0 : _error$message0.includes('timed out'));\n};\n\n// Error recovery suggestions\nexport const getRecoverySuggestion = (errorType, errorCode) => {\n  var _suggestions$errorTyp;\n  const suggestions = {\n    [ErrorTypes.WEBSOCKET]: {\n      CONNECTION_FAILED: \"Try refreshing the page or check your internet connection\",\n      MESSAGE_PARSE: \"Try refreshing the page to reset the connection\",\n      DISCONNECTED: \"The connection will automatically retry\"\n    },\n    [ErrorTypes.API]: {\n      REQUEST_FAILED: \"Check if the backend server is running\",\n      TIMEOUT: \"Try again in a few moments\",\n      UNAUTHORIZED: \"Check your authentication settings\"\n    },\n    [ErrorTypes.RECORDING]: {\n      START_FAILED: \"Check microphone permissions and try again\",\n      STOP_FAILED: \"The recording should stop automatically\",\n      PERMISSION_DENIED: \"Allow microphone access in your browser settings\"\n    },\n    [ErrorTypes.VIDEO]: {\n      START_FAILED: \"Check camera permissions and try again\",\n      STOP_FAILED: \"The video should stop automatically\",\n      PERMISSION_DENIED: \"Allow camera access in your browser settings\"\n    }\n  };\n  return ((_suggestions$errorTyp = suggestions[errorType]) === null || _suggestions$errorTyp === void 0 ? void 0 : _suggestions$errorTyp[errorCode]) || \"Please try again or contact support\";\n};\nexport default {\n  ErrorTypes,\n  ErrorMessages,\n  getErrorMessage,\n  handleError,\n  isNetworkError,\n  isPermissionError,\n  isTimeoutError,\n  getRecoverySuggestion\n};","map":{"version":3,"names":["ErrorTypes","WEBSOCKET","API","RECORDING","VIDEO","AUDIO","GENERAL","ErrorMessages","CONNECTION_FAILED","MESSAGE_PARSE","DISCONNECTED","REQUEST_FAILED","TIMEOUT","UNAUTHORIZED","START_FAILED","STOP_FAILED","PERMISSION_DENIED","SETTINGS_FAILED","DEVICE_NOT_FOUND","UNKNOWN","NETWORK","getErrorMessage","errorType","errorCode","fallbackMessage","typeMessages","error","console","handleError","context","_error$message","_error$message2","_error$message3","name","message","includes","userMessage","technicalError","timestamp","Date","isNetworkError","_error$message4","_error$message5","_error$message6","isPermissionError","_error$message7","_error$message8","isTimeoutError","_error$message9","_error$message0","getRecoverySuggestion","_suggestions$errorTyp","suggestions"],"sources":["/Users/yueling/Monash/PeaceMaker/ui/src/utils/errorHandler.js"],"sourcesContent":["// Error handling utilities for PeaceMaker UI\n\nexport const ErrorTypes = {\n  WEBSOCKET: 'WebSocket',\n  API: 'API',\n  RECORDING: 'Recording',\n  VIDEO: 'Video',\n  AUDIO: 'Audio',\n  GENERAL: 'General'\n};\n\nexport const ErrorMessages = {\n  [ErrorTypes.WEBSOCKET]: {\n    CONNECTION_FAILED: \"üîå Connection failed - We're still developing the real-time features!\",\n    MESSAGE_PARSE: \"üì® Message error - We're still developing the data processing!\",\n    DISCONNECTED: \"üîå Disconnected - We're still developing the connection stability!\"\n  },\n  [ErrorTypes.API]: {\n    REQUEST_FAILED: \"üåê API error - We're still developing the backend integration!\",\n    TIMEOUT: \"‚è∞ Request timeout - We're still developing the server performance!\",\n    UNAUTHORIZED: \"üîê Access denied - We're still developing the authentication!\"\n  },\n  [ErrorTypes.RECORDING]: {\n    START_FAILED: \"üéôÔ∏è Recording failed - We're still developing the audio capture!\",\n    STOP_FAILED: \"üõë Stop failed - We're still developing the audio control!\",\n    PERMISSION_DENIED: \"üö´ Microphone access denied - We're still developing the permissions!\"\n  },\n  [ErrorTypes.VIDEO]: {\n    START_FAILED: \"üìπ Video failed - We're still developing the camera integration!\",\n    STOP_FAILED: \"üõë Video stop failed - We're still developing the video control!\",\n    PERMISSION_DENIED: \"üö´ Camera access denied - We're still developing the permissions!\"\n  },\n  [ErrorTypes.AUDIO]: {\n    SETTINGS_FAILED: \"‚öôÔ∏è Audio settings failed - We're still developing the audio processing!\",\n    DEVICE_NOT_FOUND: \"üîç Audio device not found - We're still developing the device detection!\"\n  },\n  [ErrorTypes.GENERAL]: {\n    UNKNOWN: \"‚ùì Unknown error - We're still developing this feature!\",\n    NETWORK: \"üåê Network error - We're still developing the connection handling!\",\n    TIMEOUT: \"‚è∞ Operation timeout - We're still developing the performance!\"\n  }\n};\n\nexport const getErrorMessage = (errorType, errorCode, fallbackMessage = null) => {\n  try {\n    const typeMessages = ErrorMessages[errorType];\n    if (typeMessages && typeMessages[errorCode]) {\n      return typeMessages[errorCode];\n    }\n    \n    // Fallback to general error message\n    return fallbackMessage || ErrorMessages[ErrorTypes.GENERAL].UNKNOWN;\n  } catch (error) {\n    console.error('Error getting error message:', error);\n    return \"‚ùì Something went wrong - We're still developing this feature!\";\n  }\n};\n\nexport const handleError = (error, context = 'Operation', errorType = ErrorTypes.GENERAL) => {\n  // Log the actual error for developers\n  console.error(`‚ùå ${context} error:`, error);\n  \n  // Determine error code based on error object\n  let errorCode = 'UNKNOWN';\n  \n  if (error.name === 'TypeError') {\n    errorCode = 'TYPE_ERROR';\n  } else if (error.name === 'NetworkError') {\n    errorCode = 'NETWORK';\n  } else if (error.message?.includes('timeout')) {\n    errorCode = 'TIMEOUT';\n  } else if (error.message?.includes('permission')) {\n    errorCode = 'PERMISSION_DENIED';\n  } else if (error.message?.includes('connection')) {\n    errorCode = 'CONNECTION_FAILED';\n  }\n  \n  // Get user-friendly message\n  const userMessage = getErrorMessage(errorType, errorCode);\n  \n  return {\n    userMessage,\n    technicalError: error,\n    context,\n    errorType,\n    errorCode,\n    timestamp: new Date()\n  };\n};\n\nexport const isNetworkError = (error) => {\n  return error.name === 'NetworkError' || \n         error.message?.includes('network') ||\n         error.message?.includes('fetch') ||\n         error.message?.includes('connection');\n};\n\nexport const isPermissionError = (error) => {\n  return error.name === 'NotAllowedError' ||\n         error.message?.includes('permission') ||\n         error.message?.includes('denied');\n};\n\nexport const isTimeoutError = (error) => {\n  return error.name === 'TimeoutError' ||\n         error.message?.includes('timeout') ||\n         error.message?.includes('timed out');\n};\n\n// Error recovery suggestions\nexport const getRecoverySuggestion = (errorType, errorCode) => {\n  const suggestions = {\n    [ErrorTypes.WEBSOCKET]: {\n      CONNECTION_FAILED: \"Try refreshing the page or check your internet connection\",\n      MESSAGE_PARSE: \"Try refreshing the page to reset the connection\",\n      DISCONNECTED: \"The connection will automatically retry\"\n    },\n    [ErrorTypes.API]: {\n      REQUEST_FAILED: \"Check if the backend server is running\",\n      TIMEOUT: \"Try again in a few moments\",\n      UNAUTHORIZED: \"Check your authentication settings\"\n    },\n    [ErrorTypes.RECORDING]: {\n      START_FAILED: \"Check microphone permissions and try again\",\n      STOP_FAILED: \"The recording should stop automatically\",\n      PERMISSION_DENIED: \"Allow microphone access in your browser settings\"\n    },\n    [ErrorTypes.VIDEO]: {\n      START_FAILED: \"Check camera permissions and try again\",\n      STOP_FAILED: \"The video should stop automatically\",\n      PERMISSION_DENIED: \"Allow camera access in your browser settings\"\n    }\n  };\n  \n  return suggestions[errorType]?.[errorCode] || \"Please try again or contact support\";\n};\n\nexport default {\n  ErrorTypes,\n  ErrorMessages,\n  getErrorMessage,\n  handleError,\n  isNetworkError,\n  isPermissionError,\n  isTimeoutError,\n  getRecoverySuggestion\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}